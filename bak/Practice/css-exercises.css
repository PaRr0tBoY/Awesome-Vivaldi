/* ========================================
   CSS 学习练习文件
   通过实际练习学习 CSS 核心概念
   ======================================== */

/*
  练习 1: CSS 变量和基础样式
  TODO(human): 创建一个简单的卡片组件，使用CSS变量定义颜色和间距
  需求：
  - 定义至少3个CSS变量用于颜色
  - 定义2个CSS变量用于间距
  - 创建一个.card类，具有圆角、阴影和内边距
  - 使用你定义的变量
*/

/* 在这里写下你的代码 */
/* 示例：
:root {
  --primary-color: #3498db;
  --secondary-color: #2ecc71;
  --text-color: #333;
  --spacing-small: 8px;
  --spacing-large: 16px;
}

.card {
  background-color: var(--primary-color);
  color: var(--text-color);
  padding: var(--spacing-large);
  margin: var(--spacing-small);
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}
*/




/*
  练习 2: 选择器和伪类
  TODO(human): 为链接创建交互效果
  需求：
  - 创建.link类用于链接样式
  - 实现 :hover 效果（颜色变化）
  - 实现 :active 效果（缩放）
  - 实现 :focus 效果（轮廓）
*/

/* 在这里写下你的代码 */




/*
  练习 3: Flexbox 布局
  TODO(human): 创建一个简单的导航栏
  需求：
  - 使用 flexbox 布局
  - 包含logo、导航链接和用户头像
  - 响应式设计（在小屏幕上垂直排列）
  - 元素之间合理间距
*/

/* 在这里写下你的代码 */




/*
  练习 4: Grid 布局
  TODO(human): 创建一个图片网格
  需求：
  - 使用 CSS Grid 创建3列网格
  - 图片在网格中居中显示
  - 网格间距为15px
  - 响应式（在移动端变为2列）
*/

/* 在这里写下你的代码 */




/*
  练习 5: 动画和过渡
  TODO(human): 创建一个按钮动画效果
  需求：
  - 默认状态：蓝色背景
  - 悬停时：背景渐变为深蓝色，向右移动2px
  - 点击时：缩放效果
  - 使用 transition 实现平滑过渡
*/

/* 在这里写下你的代码 */




/*
  练习 6: 响应式设计
  TODO(human): 创建一个响应式卡片布局
  需求：
  - 大屏幕：4列网格
  - 平板：3列网格
  - 手机：2列网格
  - 使用媒体查询实现不同布局
*/

/* 在这里写下你的代码 */




/*
  练习 7: CSS 函数和计算
  TODO(human): 创建一个动态间距系统
  需求：
  - 使用 calc() 函数计算动态间距
  - 使用 min() 和 max() 函数限制尺寸
  - 创建一个自适应的容器
*/

/* 在这里写下你的代码 */




/*
  练习 8: 高级选择器
  TODO(human): 创建一个嵌套菜单
  需求：
  - 使用后代选择器
  - 使用相邻兄弟选择器
  - 使用属性选择器
  - 创建下拉菜单效果
*/

/* 在这里写下你的代码 */




/* ========================================
   答案区域（完成后查看）
   ======================================== */

/* 练习 1 答案 */
/*
:root {
  --card-bg: #ffffff;
  --card-border: #e0e0e0;
  --card-shadow: rgba(0, 0, 0, 0.1);
  --spacing-sm: 8px;
  --spacing-md: 16px;
}

.card {
  background-color: var(--card-bg);
  border: 1px solid var(--card-border);
  border-radius: 8px;
  padding: var(--spacing-md);
  margin: var(--spacing-sm);
  box-shadow: 0 2px 8px var(--card-shadow);
  transition: transform 0.2s ease;
}

.card:hover {
  transform: translateY(-2px);
}
*/